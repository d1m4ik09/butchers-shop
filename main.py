import telebot
from telebot import types
from dotenv import load_dotenv
import os

load_dotenv()
bot = telebot.TeleBot(os.getenv("TOKEN"))

orders = {}
prices = {
    "üçî–ß–∏–∑–±—É—Ä–≥–µ—Ä|3H": 3,
    "üçî–ö–ª–∞—Å—Å–∏–∫–∞|4H": 4,
    "üçî–î–≤–æ–π–Ω–æ–π|5H": 5,
    "üçü–°–æ–ª—å|1H": 1,
    "üçü–°–º–µ—Ç–∞–Ω–∞ –∏ –∑–µ–ª–µ–Ω—å|1H": 1,
    "ü•§–ö–æ–ª–∞|1H": 1,
    "ü•§–õ–∏–ø—Ç–æ–Ω|1H": 1,
    "ü•§–Ø–±–ª–æ—á–Ω—ã–π —Å–æ–∫|1H": 1
}
menu = ["üçî–ß–∏–∑–±—É—Ä–≥–µ—Ä|3H", "üçî–ö–ª–∞—Å—Å–∏–∫–∞|4H", "üçî–î–≤–æ–π–Ω–æ–π|5H", "üçü–°–æ–ª—å|1H", "üçü–°–º–µ—Ç–∞–Ω–∞ –∏ –∑–µ–ª–µ–Ω—å|1H", "ü•§–ö–æ–ª–∞|1H", "ü•§–õ–∏–ø—Ç–æ–Ω|1H", "ü•§–Ø–±–ª–æ—á–Ω—ã–π —Å–æ–∫|1H"]

@bot.message_handler(commands=['start'])
def start(message):
    # user_form[message.chat.id] = {"skills": ""}
    orders[message.chat.id] = {"order": "", "price": 0}
    
    markup = types.ReplyKeyboardMarkup()
    
    make_an_order = types.KeyboardButton("üõí–°–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑")
    
    markup.row(make_an_order)
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –ø—Ä–∏–Ω—è—Ç–∏—è –∑–∞–∫–∞–∑–æ–≤. –ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É 'üõí–°–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑', —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å.", reply_markup=markup)
    bot.register_next_step_handler(message, on_click)
    
@bot.message_handler(content_types=['text'])
def on_click(message):

    if message.text == 'üõí–°–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑':
        markup = types.ReplyKeyboardMarkup()

        cheese = types.KeyboardButton(menu[0])
        classic = types.KeyboardButton(menu[1])
        double = types.KeyboardButton(menu[2])
        
        snack1 = types.KeyboardButton(menu[3])
        snack2 = types.KeyboardButton(menu[4])
        
        drink1 = types.KeyboardButton(menu[5])
        drink2 = types.KeyboardButton(menu[6])
        drink3 = types.KeyboardButton(menu[7])

        ready_order = types.KeyboardButton("‚úÖ–Ø —Å–¥–µ–ª–∞–ª –∑–∞–∫–∞–∑")

        markup.row(cheese, classic, double)
        markup.row(drink1, drink2, drink3)
        markup.row(snack1, snack2)
        markup.row(ready_order)
        
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–∑–∏—Ü–∏–∏ –∏–∑ –∫–Ω–æ–ø–æ–∫ –∏ –Ω–∞–∂–º–∏—Ç–µ '‚úÖ–Ø —Å–¥–µ–ª–∞–ª –∑–∞–∫–∞–∑'", reply_markup=markup)

    if message.text in menu:
        orders[message.chat.id]["order"] += f"{message.text} "
        orders[message.chat.id]["price"] += prices[message.text]
        print(orders)

    if message.text == "‚úÖ–Ø —Å–¥–µ–ª–∞–ª –∑–∞–∫–∞–∑":
        print(orders)
        markup = types.ReplyKeyboardMarkup()
        send = types.KeyboardButton("‚úÖ–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞–∫–∞–∑")
        cancel = types.KeyboardButton("‚ùå–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑")
        markup.row(send, cancel)

        bot.send_message(message.chat.id, f'–í–∞—à –∑–∞–∫–∞–∑: \n{orders[message.chat.id]["order"].split()}\n\n–°—É–º–º–∞ –∑–∞–∫–∞–∑–∞: {orders[message.chat.id]["price"]}H')
        
        bot.send_message(message.chat.id, "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–∞—à –∑–∞–∫–∞–∑ –∏ –Ω–∞–∂–º–∏—Ç–µ '‚úÖ–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞–∫–∞–∑', –µ—Å–ª–∏ –≤—ã –¥–æ–ø—É—Å—Ç–∏–ª–∏ –æ—à–∏–±–∫—É, –Ω–∞–∂–º–∏—Ç–µ '‚ùå–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑'", reply_markup=markup)
        


    if message.text == "‚ùå–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑":
        orders[message.chat.id] = {"order": "", "price": 0}

        markup = types.ReplyKeyboardMarkup()

        make_an_order = types.KeyboardButton("üõí–°–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑")

        markup.row(make_an_order)
        print(orders)

    if message.text == '‚úÖ–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞–∫–∞–∑':    
        markup = types.ReplyKeyboardMarkup()
        # rdy_btn = types.KeyboardButton("‚úÖ–ì–æ—Ç–æ–≤–æ")
        
        
        bot.send_message(message.chat.id, "–î–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–∫–∞–∑–∞ –Ω–∞ –∫—É—Ö–Ω—é, –Ω–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ—ë –∏–º—è")
        
        bot.register_next_step_handler(message, get_name)

@bot.message_handler()
def get_name(message):
    global orders
    
    orders[message.chat.id]["name"] = message.text
    


@bot.message_handler()
def on_click2(message):
    pass
    

def check_order(message):
    pass
   

def send_order(message):
    count = 0

    for item in orders[message.chat.id]:
        count += prices[item]
    
    # –ø–µ—Ä–µ—Å—ã–ª–∫–∞ –≤ –∫–∞–Ω–∞–ª —Å inline


bot.infinity_polling()