import telebot
from telebot import types
from dotenv import load_dotenv
import os

load_dotenv()
bot = telebot.TeleBot(os.getenv("TOKEN"))


stat = {
    "üçî–ß–∏–∑–±—É—Ä–≥–µ—Ä|3H": 0,
    "üçî–ö–ª–∞—Å—Å–∏–∫–∞|4H": 0,
    "üçî–î–≤–æ–π–Ω–æ–π|5H": 0,
    "üçü–°–æ–ª—å|1H": 0,
    "üçü–°–º–µ—Ç–∞–Ω–∞ –∏ –∑–µ–ª–µ–Ω—å|1H": 0,
    "üçó–¢—É—à–µ–Ω–∫–∞|2H" : 0,
    "ü•§–ö–æ–ª–∞|1H": 0,
    "ü•§–õ–∏–ø—Ç–æ–Ω|1H": 0,
    "ü•§–Ø–±–ª–æ—á–Ω—ã–π —Å–æ–∫|1H": 0,
    "price" : 0
}

orders = {}
prices = {
    "üçî–ß–∏–∑–±—É—Ä–≥–µ—Ä|3H": 3,
    "üçî–ö–ª–∞—Å—Å–∏–∫–∞|4H": 4,
    "üçî–î–≤–æ–π–Ω–æ–π|5H": 5,
    "üçü–°–æ–ª—å|1H": 1,
    "üçü–°–º–µ—Ç–∞–Ω–∞ –∏ –∑–µ–ª–µ–Ω—å|1H": 1,
    "üçó–¢—É—à–µ–Ω–∫–∞|2H" : 2,
    "ü•§–ö–æ–ª–∞|1H": 1,
    "ü•§–õ–∏–ø—Ç–æ–Ω|1H": 1,
    "ü•§–Ø–±–ª–æ—á–Ω—ã–π —Å–æ–∫|1H": 1
}
menu = ["üçî–ß–∏–∑–±—É—Ä–≥–µ—Ä|3H", "üçî–ö–ª–∞—Å—Å–∏–∫–∞|4H", "üçî–î–≤–æ–π–Ω–æ–π|5H", "üçü–°–æ–ª—å|1H", "üçü–°–º–µ—Ç–∞–Ω–∞ –∏ –∑–µ–ª–µ–Ω—å|1H", "üçó–¢—É—à–µ–Ω–∫–∞|2H", "ü•§–ö–æ–ª–∞|1H", "ü•§–õ–∏–ø—Ç–æ–Ω|1H", "ü•§–Ø–±–ª–æ—á–Ω—ã–π —Å–æ–∫|1H"]

@bot.message_handler(commands=['start'])
def start(message):
    orders[message.chat.id] = {"order": [], "price": 0, "delivery": ""} 
    
    markup = types.ReplyKeyboardMarkup()
    
    store_make_order = types.KeyboardButton("üõí–ö–∞—Å—Å–∞")
    delivery_make_order = types.KeyboardButton("üöö–î–æ—Å—Ç–∞–≤–∫–∞")

    markup.row(store_make_order, delivery_make_order)
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏ —Å–ø–æ—Å–æ–± –∑–∞–∫–∞–∑–∞", reply_markup=markup)

@bot.message_handler(commands=["stat"])
def statistics(message):
    print(stat)

@bot.message_handler(commands=["clearstatdata"])
def clear(message):
    global stat
    stat = {
        "üçî–ß–∏–∑–±—É—Ä–≥–µ—Ä|3H": 0,
        "üçî–ö–ª–∞—Å—Å–∏–∫–∞|4H": 0,
        "üçî–î–≤–æ–π–Ω–æ–π|5H": 0,
        "üçü–°–æ–ª—å|1H": 0,
        "üçü–°–º–µ—Ç–∞–Ω–∞ –∏ –∑–µ–ª–µ–Ω—å|1H": 0,
        "üçó–¢—É—à–µ–Ω–∫–∞|2H" : 0,
        "ü•§–ö–æ–ª–∞|1H": 0,
        "ü•§–õ–∏–ø—Ç–æ–Ω|1H": 0,
        "ü•§–Ø–±–ª–æ—á–Ω—ã–π —Å–æ–∫|1H": 0,
        "price" : 0
    }
    bot.send_message(message.chat.id, "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ—á–∏—â–µ–Ω–∞")


@bot.message_handler(content_types=['text'])
def on_click(message):

    if message.text == "üõí–ö–∞—Å—Å–∞":
        markup = types.ReplyKeyboardMarkup()

        cheese = types.KeyboardButton(menu[0])
        classic = types.KeyboardButton(menu[1])
        double = types.KeyboardButton(menu[2])
        
        snack1 = types.KeyboardButton(menu[3])
        snack2 = types.KeyboardButton(menu[4])
        snack3 = types.KeyboardButton(menu[5])
        
        drink1 = types.KeyboardButton(menu[6])
        drink2 = types.KeyboardButton(menu[7])
        drink3 = types.KeyboardButton(menu[8])

        ready_order = types.KeyboardButton("‚úÖ–ì–æ—Ç–æ–≤–æ")

        markup.row(cheese, classic, double)
        markup.row(drink1, drink2, drink3)
        markup.row(snack1, snack2, snack3)
        markup.row(ready_order)
        
        orders[message.chat.id]["delivery"] = False
        
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–∑–∏—Ü–∏–∏ –∏–∑ –∫–Ω–æ–ø–æ–∫ –∏ –Ω–∞–∂–º–∏—Ç–µ '‚úÖ–ì–æ—Ç–æ–≤–æ'", reply_markup=markup)

    if message.text == "üöö–î–æ—Å—Ç–∞–≤–∫–∞":
        markup = types.ReplyKeyboardMarkup()

        cheese = types.KeyboardButton(menu[0])
        classic = types.KeyboardButton(menu[1])
        double = types.KeyboardButton(menu[2])
        
        snack1 = types.KeyboardButton(menu[3])
        snack2 = types.KeyboardButton(menu[4])
        snack3 = types.KeyboardButton(menu[5])
        
        drink1 = types.KeyboardButton(menu[6])
        drink2 = types.KeyboardButton(menu[7])
        drink3 = types.KeyboardButton(menu[8])

        ready_order = types.KeyboardButton("‚úÖ–ì–æ—Ç–æ–≤–æ")

        markup.row(cheese, classic, double)
        markup.row(drink1, drink2, drink3)
        markup.row(snack1, snack2, snack3)
        markup.row(ready_order)
        
        orders[message.chat.id]["delivery"] = True

        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–∑–∏—Ü–∏–∏ –∏–∑ –∫–Ω–æ–ø–æ–∫ –∏ –Ω–∞–∂–º–∏—Ç–µ '‚úÖ–ì–æ—Ç–æ–≤–æ'", reply_markup=markup)    

    if message.text in menu:
        orders[message.chat.id]["order"].append(message.text)
        orders[message.chat.id]["price"] += prices[message.text]
        print(orders)

    if message.text == "‚úÖ–ì–æ—Ç–æ–≤–æ":
        bot.send_message(message.chat.id, '–ù–∞–ø–∏—à–∏—Ç–µ –∏–º—è')
        bot.register_next_step_handler(message, get_name)

    if message.text == "‚ùå–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑":
        orders[message.chat.id] = {"order": [], "price": 0, "delivery": ""}

        markup = types.ReplyKeyboardMarkup()

        store_make_order = types.KeyboardButton("üõí–ö–∞—Å—Å–∞")
        delivery_make_order = types.KeyboardButton("üöö–î–æ—Å—Ç–∞–≤–∫–∞")

        markup.row(store_make_order, delivery_make_order)
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏ —Å–ø–æ—Å–æ–± –∑–∞–∫–∞–∑–∞", reply_markup=markup)

    if message.text == '‚úÖ–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞–∫–∞–∑' :
        global stat

        markup = types.InlineKeyboardMarkup()

        btn1 = types.InlineKeyboardButton('–ó–∞–∫–∞–∑ –≥–æ—Ç–æ–≤', callback_data="ready")
        
        markup.add(btn1)

        for item in orders[message.chat.id]["order"]:
            stat[item] += 1

        stat["price"] += orders[message.chat.id]["price"]
        
        if orders[message.chat.id]["delivery"] == False:
            bot.send_message("-4729706765", f"–ò–º—è: {orders[message.chat.id]["name"]}\n–í–∞—à –∑–∞–∫–∞–∑:\n{orders[message.chat.id]["order"]}\n\n–°—É–º–º–∞ –∑–∞–∫–∞–∑–∞: {orders[message.chat.id]["price"]}H\n\n–ó–∞–∫–∞–∑ –Ω–∞ –∫–∞—Å—Å—É", reply_markup=markup)

        else:
            bot.send_message("-4729706765", f'–ò–º—è: {orders[message.chat.id]["name"]}\n–ù–æ–º–µ—Ä —Å—Ç–æ–ª–∞: {orders[message.chat.id]["table_number"]}\n–¢–µ–ª–µ—Ñ–æ–Ω: {orders[message.chat.id]["phone"]}\n–ù–∞–∑–≤–∞–Ω–∏–µ —Å—Ç–∞—Ä—Ç-–∞–ø–∞: {orders[message.chat.id]["table_name"]}\n\n–í–∞—à –∑–∞–∫–∞–∑: \n{orders[message.chat.id]["order"]}\n\n–°—É–º–º–∞ –∑–∞–∫–∞–∑–∞: {orders[message.chat.id]["price"]}H + 1H(–∑–∞ –¥–æ—Å—Ç–∞–≤–∫—É)\n–ò—Ç–æ–≥–æ: {orders[message.chat.id]["price"] + 1}H\n\n–ó–∞–∫–∞–∑ –Ω–∞ –¥–æ—Å—Ç–∞–≤–∫—É', reply_markup=markup)

        markup = types.ReplyKeyboardMarkup()

        orders[message.chat.id] = {"order": [], "price": 0, "delivery": ""}

        store_make_order = types.KeyboardButton("üõí–ö–∞—Å—Å–∞")
        delivery_make_order = types.KeyboardButton("üöö–î–æ—Å—Ç–∞–≤–∫–∞")

        markup.row(store_make_order, delivery_make_order)
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏ —Å–ø–æ—Å–æ–± –∑–∞–∫–∞–∑–∞", reply_markup=markup)
        
       
@bot.message_handler()
def get_name(message):
    orders[message.chat.id]["name"] = message.text
    
    if orders[message.chat.id]["delivery"] == True:

        bot.send_message(message.chat.id, "–ù–∞–ø–∏—à–∏—Ç–µ –Ω–æ–º–µ—Ä —Å—Ç–æ–ª–∞")
        bot.register_next_step_handler(message, get_table_number)
        
    else:
        markup = types.ReplyKeyboardMarkup()

        send = types.KeyboardButton("‚úÖ–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞–∫–∞–∑")
        cancel = types.KeyboardButton("‚ùå–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑")
        
        markup.row(send, cancel)
        
        bot.send_message(message.chat.id, f'–ò–º—è: {orders[message.chat.id]["name"]}\n\n–í–∞—à –∑–∞–∫–∞–∑: \n{orders[message.chat.id]["order"]}\n\n–°—É–º–º–∞ –∑–∞–∫–∞–∑–∞: {orders[message.chat.id]["price"]}H\n\n–ó–∞–∫–∞–∑ –Ω–∞ –∫–∞—Å—Å—É')
        bot.send_message(message.chat.id, "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–∞—à –∑–∞–∫–∞–∑ –∏ –Ω–∞–∂–º–∏—Ç–µ '‚úÖ–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞–∫–∞–∑', –µ—Å–ª–∏ –≤—ã –¥–æ–ø—É—Å—Ç–∏–ª–∏ –æ—à–∏–±–∫—É, –Ω–∞–∂–º–∏—Ç–µ '‚ùå–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑'", reply_markup=markup)
        
def get_table_number(message):
    orders[message.chat.id]["table_number"] = message.text
    bot.send_message(message.chat.id, "–ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞.")
    bot.register_next_step_handler(message, get_number)

def get_number(message):
    orders[message.chat.id]["phone"] = message.text
    bot.send_message(message.chat.id, "–ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ç–∞—Ä—Ç–∞–ø–∞")
    bot.register_next_step_handler(message, get_table_name)

def get_table_name(message):

    orders[message.chat.id]["table_name"] = message.text
    
    markup = types.ReplyKeyboardMarkup()

    send = types.KeyboardButton("‚úÖ–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞–∫–∞–∑")
    cancel = types.KeyboardButton("‚ùå–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑")

    markup.row(send, cancel)
    
    bot.send_message(message.chat.id, f'–ò–º—è: {orders[message.chat.id]["name"]}\n–ù–æ–º–µ—Ä —Å—Ç–æ–ª–∞: {orders[message.chat.id]["table_number"]}\n–¢–µ–ª–µ—Ñ–æ–Ω: {orders[message.chat.id]["phone"]}\n–ù–∞–∑–≤–∞–Ω–∏–µ —Å—Ç–∞—Ä—Ç-–∞–ø–∞: {orders[message.chat.id]["table_name"]}\n\n–í–∞—à –∑–∞–∫–∞–∑: \n{orders[message.chat.id]["order"]}\n\n–°—É–º–º–∞ –∑–∞–∫–∞–∑–∞: {orders[message.chat.id]["price"]}H + 1H(–∑–∞ –¥–æ—Å—Ç–∞–≤–∫—É)\n–ò—Ç–æ–≥–æ: {orders[message.chat.id]["price"] + 1}H\n\n–ó–∞–∫–∞–∑ –Ω–∞ –¥–æ—Å—Ç–∞–≤–∫—É')
    bot.send_message(message.chat.id, "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–∞—à –∑–∞–∫–∞–∑ –∏ –Ω–∞–∂–º–∏—Ç–µ '‚úÖ–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞–∫–∞–∑', –µ—Å–ª–∏ –≤—ã –¥–æ–ø—É—Å—Ç–∏–ª–∏ –æ—à–∏–±–∫—É, –Ω–∞–∂–º–∏—Ç–µ '‚ùå–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑'", reply_markup=markup)

@bot.callback_query_handler(func=lambda callback: True)
def callback_message(callback):
    if callback.data == "ready":
        markup = types.InlineKeyboardMarkup()
        btn1 = types.InlineKeyboardButton("–û—Ç–Ω–µ—Å –∑–∞–∫–∞–∑ –Ω–∞ —Ç–æ—á–∫—É", callback_data="delivered")

        markup.row(btn1)

        bot.send_message("-4649840888", callback.message.text, reply_markup=markup)
        bot.delete_message(callback.message.chat.id, callback.message.message_id)

    if callback.data == "delivered":
        bot.edit_message_text(callback.message.chat.id, callback.message.message_id, text="‚úÖ–ó–∞–∫–∞–∑ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω")


bot.infinity_polling()